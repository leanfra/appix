// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: api/appix/v1/hostgroups.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// gratos::model
type Hostgroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ClusterId       uint32   `protobuf:"varint,4,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	DatacenterId    uint32   `protobuf:"varint,5,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"`
	EnvId           uint32   `protobuf:"varint,6,opt,name=env_id,json=envId,proto3" json:"env_id,omitempty"`
	ProductId       uint32   `protobuf:"varint,7,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	TeamId          uint32   `protobuf:"varint,8,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	FeaturesId      []uint32 `protobuf:"varint,9,rep,packed,name=features_id,json=featuresId,proto3" json:"features_id,omitempty"`
	TagsId          []uint32 `protobuf:"varint,10,rep,packed,name=tags_id,json=tagsId,proto3" json:"tags_id,omitempty"`
	ShareProductsId []uint32 `protobuf:"varint,11,rep,packed,name=share_products_id,json=shareProductsId,proto3" json:"share_products_id,omitempty"`
	ShareTeamsId    []uint32 `protobuf:"varint,12,rep,packed,name=share_teams_id,json=shareTeamsId,proto3" json:"share_teams_id,omitempty"`
}

func (x *Hostgroup) Reset() {
	*x = Hostgroup{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hostgroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hostgroup) ProtoMessage() {}

func (x *Hostgroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hostgroup.ProtoReflect.Descriptor instead.
func (*Hostgroup) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{0}
}

func (x *Hostgroup) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Hostgroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hostgroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Hostgroup) GetClusterId() uint32 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *Hostgroup) GetDatacenterId() uint32 {
	if x != nil {
		return x.DatacenterId
	}
	return 0
}

func (x *Hostgroup) GetEnvId() uint32 {
	if x != nil {
		return x.EnvId
	}
	return 0
}

func (x *Hostgroup) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Hostgroup) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *Hostgroup) GetFeaturesId() []uint32 {
	if x != nil {
		return x.FeaturesId
	}
	return nil
}

func (x *Hostgroup) GetTagsId() []uint32 {
	if x != nil {
		return x.TagsId
	}
	return nil
}

func (x *Hostgroup) GetShareProductsId() []uint32 {
	if x != nil {
		return x.ShareProductsId
	}
	return nil
}

func (x *Hostgroup) GetShareTeamsId() []uint32 {
	if x != nil {
		return x.ShareTeamsId
	}
	return nil
}

// Hostgroup readable
type HostgroupReadable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Cluster       string   `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Datacenter    string   `protobuf:"bytes,5,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	Env           string   `protobuf:"bytes,6,opt,name=env,proto3" json:"env,omitempty"`
	Product       string   `protobuf:"bytes,7,opt,name=product,proto3" json:"product,omitempty"`
	Team          string   `protobuf:"bytes,8,opt,name=team,proto3" json:"team,omitempty"`
	Features      []string `protobuf:"bytes,9,rep,name=features,proto3" json:"features,omitempty"`
	Tags          []string `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	ShareProducts []string `protobuf:"bytes,11,rep,name=share_products,json=shareProducts,proto3" json:"share_products,omitempty"`
	ShareTeams    []string `protobuf:"bytes,12,rep,name=share_teams,json=shareTeams,proto3" json:"share_teams,omitempty"`
}

func (x *HostgroupReadable) Reset() {
	*x = HostgroupReadable{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostgroupReadable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostgroupReadable) ProtoMessage() {}

func (x *HostgroupReadable) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostgroupReadable.ProtoReflect.Descriptor instead.
func (*HostgroupReadable) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{1}
}

func (x *HostgroupReadable) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HostgroupReadable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostgroupReadable) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *HostgroupReadable) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *HostgroupReadable) GetDatacenter() string {
	if x != nil {
		return x.Datacenter
	}
	return ""
}

func (x *HostgroupReadable) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *HostgroupReadable) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *HostgroupReadable) GetTeam() string {
	if x != nil {
		return x.Team
	}
	return ""
}

func (x *HostgroupReadable) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *HostgroupReadable) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *HostgroupReadable) GetShareProducts() []string {
	if x != nil {
		return x.ShareProducts
	}
	return nil
}

func (x *HostgroupReadable) GetShareTeams() []string {
	if x != nil {
		return x.ShareTeams
	}
	return nil
}

type CreateHostgroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostgroups []*Hostgroup `protobuf:"bytes,1,rep,name=hostgroups,proto3" json:"hostgroups,omitempty"`
}

func (x *CreateHostgroupsRequest) Reset() {
	*x = CreateHostgroupsRequest{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHostgroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHostgroupsRequest) ProtoMessage() {}

func (x *CreateHostgroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHostgroupsRequest.ProtoReflect.Descriptor instead.
func (*CreateHostgroupsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{2}
}

func (x *CreateHostgroupsRequest) GetHostgroups() []*Hostgroup {
	if x != nil {
		return x.Hostgroups
	}
	return nil
}

type CreateHostgroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CreateHostgroupsReply) Reset() {
	*x = CreateHostgroupsReply{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHostgroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHostgroupsReply) ProtoMessage() {}

func (x *CreateHostgroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHostgroupsReply.ProtoReflect.Descriptor instead.
func (*CreateHostgroupsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{3}
}

func (x *CreateHostgroupsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateHostgroupsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateHostgroupsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type UpdateHostgroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostgroups []*Hostgroup `protobuf:"bytes,1,rep,name=hostgroups,proto3" json:"hostgroups,omitempty"`
}

func (x *UpdateHostgroupsRequest) Reset() {
	*x = UpdateHostgroupsRequest{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHostgroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHostgroupsRequest) ProtoMessage() {}

func (x *UpdateHostgroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHostgroupsRequest.ProtoReflect.Descriptor instead.
func (*UpdateHostgroupsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateHostgroupsRequest) GetHostgroups() []*Hostgroup {
	if x != nil {
		return x.Hostgroups
	}
	return nil
}

type UpdateHostgroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *UpdateHostgroupsReply) Reset() {
	*x = UpdateHostgroupsReply{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHostgroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHostgroupsReply) ProtoMessage() {}

func (x *UpdateHostgroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHostgroupsReply.ProtoReflect.Descriptor instead.
func (*UpdateHostgroupsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateHostgroupsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateHostgroupsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateHostgroupsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type DeleteHostgroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteHostgroupsRequest) Reset() {
	*x = DeleteHostgroupsRequest{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteHostgroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHostgroupsRequest) ProtoMessage() {}

func (x *DeleteHostgroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHostgroupsRequest.ProtoReflect.Descriptor instead.
func (*DeleteHostgroupsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteHostgroupsRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteHostgroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *DeleteHostgroupsReply) Reset() {
	*x = DeleteHostgroupsReply{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteHostgroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHostgroupsReply) ProtoMessage() {}

func (x *DeleteHostgroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHostgroupsReply.ProtoReflect.Descriptor instead.
func (*DeleteHostgroupsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteHostgroupsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteHostgroupsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteHostgroupsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type GetHostgroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetHostgroupsRequest) Reset() {
	*x = GetHostgroupsRequest{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHostgroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostgroupsRequest) ProtoMessage() {}

func (x *GetHostgroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostgroupsRequest.ProtoReflect.Descriptor instead.
func (*GetHostgroupsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{8}
}

func (x *GetHostgroupsRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetHostgroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message   string     `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code      int32      `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action    string     `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Hostgroup *Hostgroup `protobuf:"bytes,4,opt,name=hostgroup,proto3" json:"hostgroup,omitempty"`
}

func (x *GetHostgroupsReply) Reset() {
	*x = GetHostgroupsReply{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHostgroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHostgroupsReply) ProtoMessage() {}

func (x *GetHostgroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHostgroupsReply.ProtoReflect.Descriptor instead.
func (*GetHostgroupsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{9}
}

func (x *GetHostgroupsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetHostgroupsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetHostgroupsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GetHostgroupsReply) GetHostgroup() *Hostgroup {
	if x != nil {
		return x.Hostgroup
	}
	return nil
}

type ListHostgroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page            uint32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize        uint32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Ids             []uint32 `protobuf:"varint,3,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Names           []string `protobuf:"bytes,4,rep,name=names,proto3" json:"names,omitempty"`
	ClustersId      []uint32 `protobuf:"varint,5,rep,packed,name=clusters_id,json=clustersId,proto3" json:"clusters_id,omitempty"`
	DatacentersId   []uint32 `protobuf:"varint,6,rep,packed,name=datacenters_id,json=datacentersId,proto3" json:"datacenters_id,omitempty"`
	EnvsId          []uint32 `protobuf:"varint,7,rep,packed,name=envs_id,json=envsId,proto3" json:"envs_id,omitempty"`
	ProductsId      []uint32 `protobuf:"varint,8,rep,packed,name=products_id,json=productsId,proto3" json:"products_id,omitempty"`
	TeamsId         []uint32 `protobuf:"varint,9,rep,packed,name=teams_id,json=teamsId,proto3" json:"teams_id,omitempty"`
	FeaturesId      []uint32 `protobuf:"varint,10,rep,packed,name=features_id,json=featuresId,proto3" json:"features_id,omitempty"`
	TagsId          []uint32 `protobuf:"varint,11,rep,packed,name=tags_id,json=tagsId,proto3" json:"tags_id,omitempty"`
	ShareProductsId []uint32 `protobuf:"varint,12,rep,packed,name=share_products_id,json=shareProductsId,proto3" json:"share_products_id,omitempty"`
	ShareTeamsId    []uint32 `protobuf:"varint,13,rep,packed,name=share_teams_id,json=shareTeamsId,proto3" json:"share_teams_id,omitempty"`
}

func (x *ListHostgroupsRequest) Reset() {
	*x = ListHostgroupsRequest{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostgroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostgroupsRequest) ProtoMessage() {}

func (x *ListHostgroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostgroupsRequest.ProtoReflect.Descriptor instead.
func (*ListHostgroupsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{10}
}

func (x *ListHostgroupsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListHostgroupsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListHostgroupsRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListHostgroupsRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ListHostgroupsRequest) GetClustersId() []uint32 {
	if x != nil {
		return x.ClustersId
	}
	return nil
}

func (x *ListHostgroupsRequest) GetDatacentersId() []uint32 {
	if x != nil {
		return x.DatacentersId
	}
	return nil
}

func (x *ListHostgroupsRequest) GetEnvsId() []uint32 {
	if x != nil {
		return x.EnvsId
	}
	return nil
}

func (x *ListHostgroupsRequest) GetProductsId() []uint32 {
	if x != nil {
		return x.ProductsId
	}
	return nil
}

func (x *ListHostgroupsRequest) GetTeamsId() []uint32 {
	if x != nil {
		return x.TeamsId
	}
	return nil
}

func (x *ListHostgroupsRequest) GetFeaturesId() []uint32 {
	if x != nil {
		return x.FeaturesId
	}
	return nil
}

func (x *ListHostgroupsRequest) GetTagsId() []uint32 {
	if x != nil {
		return x.TagsId
	}
	return nil
}

func (x *ListHostgroupsRequest) GetShareProductsId() []uint32 {
	if x != nil {
		return x.ShareProductsId
	}
	return nil
}

func (x *ListHostgroupsRequest) GetShareTeamsId() []uint32 {
	if x != nil {
		return x.ShareTeamsId
	}
	return nil
}

type ListHostgroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code       int32        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action     string       `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Hostgroups []*Hostgroup `protobuf:"bytes,4,rep,name=hostgroups,proto3" json:"hostgroups,omitempty"`
}

func (x *ListHostgroupsReply) Reset() {
	*x = ListHostgroupsReply{}
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHostgroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHostgroupsReply) ProtoMessage() {}

func (x *ListHostgroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_hostgroups_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHostgroupsReply.ProtoReflect.Descriptor instead.
func (*ListHostgroupsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_hostgroups_proto_rawDescGZIP(), []int{11}
}

func (x *ListHostgroupsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListHostgroupsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListHostgroupsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ListHostgroupsReply) GetHostgroups() []*Hostgroup {
	if x != nil {
		return x.Hostgroups
	}
	return nil
}

var File_api_appix_v1_hostgroups_proto protoreflect.FileDescriptor

var file_api_appix_v1_hostgroups_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x68,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0c, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x02, 0x0a, 0x09,
	0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x6e, 0x76, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x67, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x49, 0x64, 0x22, 0xcb,
	0x02, 0x0a, 0x11, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x61, 0x64,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x52, 0x0a, 0x17,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x22, 0x5d, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x52, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x68, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x22, 0x5d, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x5d, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x09, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x99, 0x03, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x6e, 0x76, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x65, 0x6e, 0x76, 0x73, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0a, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x67, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61,
	0x67, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x73, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x0a, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x32, 0x97, 0x05,
	0x0a, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x84, 0x01, 0x0a,
	0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22,
	0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x76, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19,
	0x12, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7c, 0x0a, 0x0e, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x27, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x15, 0x61, 0x70, 0x70, 0x69, 0x78,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_appix_v1_hostgroups_proto_rawDescOnce sync.Once
	file_api_appix_v1_hostgroups_proto_rawDescData = file_api_appix_v1_hostgroups_proto_rawDesc
)

func file_api_appix_v1_hostgroups_proto_rawDescGZIP() []byte {
	file_api_appix_v1_hostgroups_proto_rawDescOnce.Do(func() {
		file_api_appix_v1_hostgroups_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_appix_v1_hostgroups_proto_rawDescData)
	})
	return file_api_appix_v1_hostgroups_proto_rawDescData
}

var file_api_appix_v1_hostgroups_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_appix_v1_hostgroups_proto_goTypes = []any{
	(*Hostgroup)(nil),               // 0: api.appix.v1.Hostgroup
	(*HostgroupReadable)(nil),       // 1: api.appix.v1.HostgroupReadable
	(*CreateHostgroupsRequest)(nil), // 2: api.appix.v1.CreateHostgroupsRequest
	(*CreateHostgroupsReply)(nil),   // 3: api.appix.v1.CreateHostgroupsReply
	(*UpdateHostgroupsRequest)(nil), // 4: api.appix.v1.UpdateHostgroupsRequest
	(*UpdateHostgroupsReply)(nil),   // 5: api.appix.v1.UpdateHostgroupsReply
	(*DeleteHostgroupsRequest)(nil), // 6: api.appix.v1.DeleteHostgroupsRequest
	(*DeleteHostgroupsReply)(nil),   // 7: api.appix.v1.DeleteHostgroupsReply
	(*GetHostgroupsRequest)(nil),    // 8: api.appix.v1.GetHostgroupsRequest
	(*GetHostgroupsReply)(nil),      // 9: api.appix.v1.GetHostgroupsReply
	(*ListHostgroupsRequest)(nil),   // 10: api.appix.v1.ListHostgroupsRequest
	(*ListHostgroupsReply)(nil),     // 11: api.appix.v1.ListHostgroupsReply
}
var file_api_appix_v1_hostgroups_proto_depIdxs = []int32{
	0,  // 0: api.appix.v1.CreateHostgroupsRequest.hostgroups:type_name -> api.appix.v1.Hostgroup
	0,  // 1: api.appix.v1.UpdateHostgroupsRequest.hostgroups:type_name -> api.appix.v1.Hostgroup
	0,  // 2: api.appix.v1.GetHostgroupsReply.hostgroup:type_name -> api.appix.v1.Hostgroup
	0,  // 3: api.appix.v1.ListHostgroupsReply.hostgroups:type_name -> api.appix.v1.Hostgroup
	2,  // 4: api.appix.v1.Hostgroups.CreateHostgroups:input_type -> api.appix.v1.CreateHostgroupsRequest
	4,  // 5: api.appix.v1.Hostgroups.UpdateHostgroups:input_type -> api.appix.v1.UpdateHostgroupsRequest
	6,  // 6: api.appix.v1.Hostgroups.DeleteHostgroups:input_type -> api.appix.v1.DeleteHostgroupsRequest
	8,  // 7: api.appix.v1.Hostgroups.GetHostgroups:input_type -> api.appix.v1.GetHostgroupsRequest
	10, // 8: api.appix.v1.Hostgroups.ListHostgroups:input_type -> api.appix.v1.ListHostgroupsRequest
	3,  // 9: api.appix.v1.Hostgroups.CreateHostgroups:output_type -> api.appix.v1.CreateHostgroupsReply
	5,  // 10: api.appix.v1.Hostgroups.UpdateHostgroups:output_type -> api.appix.v1.UpdateHostgroupsReply
	7,  // 11: api.appix.v1.Hostgroups.DeleteHostgroups:output_type -> api.appix.v1.DeleteHostgroupsReply
	9,  // 12: api.appix.v1.Hostgroups.GetHostgroups:output_type -> api.appix.v1.GetHostgroupsReply
	11, // 13: api.appix.v1.Hostgroups.ListHostgroups:output_type -> api.appix.v1.ListHostgroupsReply
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_appix_v1_hostgroups_proto_init() }
func file_api_appix_v1_hostgroups_proto_init() {
	if File_api_appix_v1_hostgroups_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_appix_v1_hostgroups_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_appix_v1_hostgroups_proto_goTypes,
		DependencyIndexes: file_api_appix_v1_hostgroups_proto_depIdxs,
		MessageInfos:      file_api_appix_v1_hostgroups_proto_msgTypes,
	}.Build()
	File_api_appix_v1_hostgroups_proto = out.File
	file_api_appix_v1_hostgroups_proto_rawDesc = nil
	file_api_appix_v1_hostgroups_proto_goTypes = nil
	file_api_appix_v1_hostgroups_proto_depIdxs = nil
}
