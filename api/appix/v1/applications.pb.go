// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: api/appix/v1/applications.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// gratos::model
type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description  string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	OwnerId      uint32   `protobuf:"varint,11,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	IsStateful   bool     `protobuf:"varint,13,opt,name=is_stateful,json=isStateful,proto3" json:"is_stateful,omitempty"`
	ProductId    uint32   `protobuf:"varint,7,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	TeamId       uint32   `protobuf:"varint,8,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	FeaturesId   []uint32 `protobuf:"varint,9,rep,packed,name=features_id,json=featuresId,proto3" json:"features_id,omitempty"`
	TagsId       []uint32 `protobuf:"varint,10,rep,packed,name=tags_id,json=tagsId,proto3" json:"tags_id,omitempty"`
	HostgroupsId []uint32 `protobuf:"varint,12,rep,packed,name=hostgroups_id,json=hostgroupsId,proto3" json:"hostgroups_id,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{0}
}

func (x *Application) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Application) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Application) GetIsStateful() bool {
	if x != nil {
		return x.IsStateful
	}
	return false
}

func (x *Application) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Application) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

func (x *Application) GetFeaturesId() []uint32 {
	if x != nil {
		return x.FeaturesId
	}
	return nil
}

func (x *Application) GetTagsId() []uint32 {
	if x != nil {
		return x.TagsId
	}
	return nil
}

func (x *Application) GetHostgroupsId() []uint32 {
	if x != nil {
		return x.HostgroupsId
	}
	return nil
}

// Application readable
type ApplicationReadable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Owner       string   `protobuf:"bytes,11,opt,name=owner,proto3" json:"owner,omitempty"`
	IsStateful  bool     `protobuf:"varint,13,opt,name=is_stateful,json=isStateful,proto3" json:"is_stateful,omitempty"`
	Product     string   `protobuf:"bytes,7,opt,name=product,proto3" json:"product,omitempty"`
	Team        string   `protobuf:"bytes,8,opt,name=team,proto3" json:"team,omitempty"`
	Features    []string `protobuf:"bytes,9,rep,name=features,proto3" json:"features,omitempty"`
	Tags        []string `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	Hostgroups  []string `protobuf:"bytes,12,rep,name=hostgroups,proto3" json:"hostgroups,omitempty"`
}

func (x *ApplicationReadable) Reset() {
	*x = ApplicationReadable{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationReadable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationReadable) ProtoMessage() {}

func (x *ApplicationReadable) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationReadable.ProtoReflect.Descriptor instead.
func (*ApplicationReadable) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{1}
}

func (x *ApplicationReadable) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApplicationReadable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApplicationReadable) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ApplicationReadable) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ApplicationReadable) GetIsStateful() bool {
	if x != nil {
		return x.IsStateful
	}
	return false
}

func (x *ApplicationReadable) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *ApplicationReadable) GetTeam() string {
	if x != nil {
		return x.Team
	}
	return ""
}

func (x *ApplicationReadable) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *ApplicationReadable) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ApplicationReadable) GetHostgroups() []string {
	if x != nil {
		return x.Hostgroups
	}
	return nil
}

type CreateApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apps []*Application `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *CreateApplicationsRequest) Reset() {
	*x = CreateApplicationsRequest{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicationsRequest) ProtoMessage() {}

func (x *CreateApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicationsRequest.ProtoReflect.Descriptor instead.
func (*CreateApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{2}
}

func (x *CreateApplicationsRequest) GetApps() []*Application {
	if x != nil {
		return x.Apps
	}
	return nil
}

type CreateApplicationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CreateApplicationsReply) Reset() {
	*x = CreateApplicationsReply{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateApplicationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateApplicationsReply) ProtoMessage() {}

func (x *CreateApplicationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateApplicationsReply.ProtoReflect.Descriptor instead.
func (*CreateApplicationsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{3}
}

func (x *CreateApplicationsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateApplicationsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateApplicationsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type UpdateApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apps []*Application `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *UpdateApplicationsRequest) Reset() {
	*x = UpdateApplicationsRequest{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApplicationsRequest) ProtoMessage() {}

func (x *UpdateApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApplicationsRequest.ProtoReflect.Descriptor instead.
func (*UpdateApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateApplicationsRequest) GetApps() []*Application {
	if x != nil {
		return x.Apps
	}
	return nil
}

type UpdateApplicationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *UpdateApplicationsReply) Reset() {
	*x = UpdateApplicationsReply{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateApplicationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateApplicationsReply) ProtoMessage() {}

func (x *UpdateApplicationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateApplicationsReply.ProtoReflect.Descriptor instead.
func (*UpdateApplicationsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateApplicationsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateApplicationsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateApplicationsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type DeleteApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteApplicationsRequest) Reset() {
	*x = DeleteApplicationsRequest{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationsRequest) ProtoMessage() {}

func (x *DeleteApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationsRequest.ProtoReflect.Descriptor instead.
func (*DeleteApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteApplicationsRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteApplicationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *DeleteApplicationsReply) Reset() {
	*x = DeleteApplicationsReply{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteApplicationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteApplicationsReply) ProtoMessage() {}

func (x *DeleteApplicationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteApplicationsReply.ProtoReflect.Descriptor instead.
func (*DeleteApplicationsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteApplicationsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteApplicationsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteApplicationsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type GetApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetApplicationsRequest) Reset() {
	*x = GetApplicationsRequest{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationsRequest) ProtoMessage() {}

func (x *GetApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationsRequest.ProtoReflect.Descriptor instead.
func (*GetApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{8}
}

func (x *GetApplicationsRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetApplicationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string       `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string       `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	App     *Application `protobuf:"bytes,4,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *GetApplicationsReply) Reset() {
	*x = GetApplicationsReply{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationsReply) ProtoMessage() {}

func (x *GetApplicationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationsReply.ProtoReflect.Descriptor instead.
func (*GetApplicationsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{9}
}

func (x *GetApplicationsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetApplicationsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetApplicationsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GetApplicationsReply) GetApp() *Application {
	if x != nil {
		return x.App
	}
	return nil
}

type ListApplicationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         uint32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize     uint32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Ids          []uint32 `protobuf:"varint,3,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Names        []string `protobuf:"bytes,4,rep,name=names,proto3" json:"names,omitempty"`
	IsStateful   string   `protobuf:"bytes,5,opt,name=is_stateful,json=isStateful,proto3" json:"is_stateful,omitempty"`
	ProductsId   []uint32 `protobuf:"varint,6,rep,packed,name=products_id,json=productsId,proto3" json:"products_id,omitempty"`
	TeamsId      []uint32 `protobuf:"varint,7,rep,packed,name=teams_id,json=teamsId,proto3" json:"teams_id,omitempty"`
	FeaturesId   []uint32 `protobuf:"varint,8,rep,packed,name=features_id,json=featuresId,proto3" json:"features_id,omitempty"`
	TagsId       []uint32 `protobuf:"varint,9,rep,packed,name=tags_id,json=tagsId,proto3" json:"tags_id,omitempty"`
	HostgroupsId []uint32 `protobuf:"varint,10,rep,packed,name=hostgroups_id,json=hostgroupsId,proto3" json:"hostgroups_id,omitempty"`
}

func (x *ListApplicationsRequest) Reset() {
	*x = ListApplicationsRequest{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsRequest) ProtoMessage() {}

func (x *ListApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationsRequest.ProtoReflect.Descriptor instead.
func (*ListApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{10}
}

func (x *ListApplicationsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListApplicationsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListApplicationsRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListApplicationsRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ListApplicationsRequest) GetIsStateful() string {
	if x != nil {
		return x.IsStateful
	}
	return ""
}

func (x *ListApplicationsRequest) GetProductsId() []uint32 {
	if x != nil {
		return x.ProductsId
	}
	return nil
}

func (x *ListApplicationsRequest) GetTeamsId() []uint32 {
	if x != nil {
		return x.TeamsId
	}
	return nil
}

func (x *ListApplicationsRequest) GetFeaturesId() []uint32 {
	if x != nil {
		return x.FeaturesId
	}
	return nil
}

func (x *ListApplicationsRequest) GetTagsId() []uint32 {
	if x != nil {
		return x.TagsId
	}
	return nil
}

func (x *ListApplicationsRequest) GetHostgroupsId() []uint32 {
	if x != nil {
		return x.HostgroupsId
	}
	return nil
}

type ListApplicationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string         `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32          `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string         `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Apps    []*Application `protobuf:"bytes,4,rep,name=apps,proto3" json:"apps,omitempty"`
}

func (x *ListApplicationsReply) Reset() {
	*x = ListApplicationsReply{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListApplicationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListApplicationsReply) ProtoMessage() {}

func (x *ListApplicationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListApplicationsReply.ProtoReflect.Descriptor instead.
func (*ListApplicationsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{11}
}

func (x *ListApplicationsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListApplicationsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListApplicationsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ListApplicationsReply) GetApps() []*Application {
	if x != nil {
		return x.Apps
	}
	return nil
}

type MatchAppHostgroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeaturesId []uint32 `protobuf:"varint,1,rep,packed,name=features_id,json=featuresId,proto3" json:"features_id,omitempty"`
	ProductId  uint32   `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	TeamId     uint32   `protobuf:"varint,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
}

func (x *MatchAppHostgroupsRequest) Reset() {
	*x = MatchAppHostgroupsRequest{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchAppHostgroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchAppHostgroupsRequest) ProtoMessage() {}

func (x *MatchAppHostgroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchAppHostgroupsRequest.ProtoReflect.Descriptor instead.
func (*MatchAppHostgroupsRequest) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{12}
}

func (x *MatchAppHostgroupsRequest) GetFeaturesId() []uint32 {
	if x != nil {
		return x.FeaturesId
	}
	return nil
}

func (x *MatchAppHostgroupsRequest) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *MatchAppHostgroupsRequest) GetTeamId() uint32 {
	if x != nil {
		return x.TeamId
	}
	return 0
}

type MatchAppHostgroupsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message      string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code         int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action       string   `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	HostgroupsId []uint32 `protobuf:"varint,4,rep,packed,name=hostgroups_id,json=hostgroupsId,proto3" json:"hostgroups_id,omitempty"`
}

func (x *MatchAppHostgroupsReply) Reset() {
	*x = MatchAppHostgroupsReply{}
	mi := &file_api_appix_v1_applications_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchAppHostgroupsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchAppHostgroupsReply) ProtoMessage() {}

func (x *MatchAppHostgroupsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_appix_v1_applications_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchAppHostgroupsReply.ProtoReflect.Descriptor instead.
func (*MatchAppHostgroupsReply) Descriptor() ([]byte, []int) {
	return file_api_appix_v1_applications_proto_rawDescGZIP(), []int{13}
}

func (x *MatchAppHostgroupsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MatchAppHostgroupsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MatchAppHostgroupsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *MatchAppHostgroupsReply) GetHostgroupsId() []uint32 {
	if x != nil {
		return x.HostgroupsId
	}
	return nil
}

var File_api_appix_v1_applications_proto protoreflect.FileDescriptor

var file_api_appix_v1_applications_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x02,
	0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x67, 0x73, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x49, 0x64, 0x22, 0x90, 0x02, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x61, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x68,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x4a, 0x0a, 0x19, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0x5f, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x22, 0x5f, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x5f, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x89, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x03,
	0x61, 0x70, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0xae, 0x02, 0x0a, 0x17, 0x4c, 0x69,
	0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x66, 0x75, 0x6c, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0a, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x61, 0x67, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x74,
	0x61, 0x67, 0x73, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x22, 0x74, 0x0a, 0x19, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x41, 0x70, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x22,
	0x84, 0x01, 0x0a, 0x17, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x70, 0x48, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x49, 0x64, 0x32, 0xdb, 0x06, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x8c, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x7e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a,
	0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x96, 0x01, 0x0a, 0x12,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x41, 0x70, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x70, 0x70, 0x48, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2d, 0x68, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x42, 0x27, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69,
	0x78, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x15, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_appix_v1_applications_proto_rawDescOnce sync.Once
	file_api_appix_v1_applications_proto_rawDescData = file_api_appix_v1_applications_proto_rawDesc
)

func file_api_appix_v1_applications_proto_rawDescGZIP() []byte {
	file_api_appix_v1_applications_proto_rawDescOnce.Do(func() {
		file_api_appix_v1_applications_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_appix_v1_applications_proto_rawDescData)
	})
	return file_api_appix_v1_applications_proto_rawDescData
}

var file_api_appix_v1_applications_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_api_appix_v1_applications_proto_goTypes = []any{
	(*Application)(nil),               // 0: api.appix.v1.Application
	(*ApplicationReadable)(nil),       // 1: api.appix.v1.ApplicationReadable
	(*CreateApplicationsRequest)(nil), // 2: api.appix.v1.CreateApplicationsRequest
	(*CreateApplicationsReply)(nil),   // 3: api.appix.v1.CreateApplicationsReply
	(*UpdateApplicationsRequest)(nil), // 4: api.appix.v1.UpdateApplicationsRequest
	(*UpdateApplicationsReply)(nil),   // 5: api.appix.v1.UpdateApplicationsReply
	(*DeleteApplicationsRequest)(nil), // 6: api.appix.v1.DeleteApplicationsRequest
	(*DeleteApplicationsReply)(nil),   // 7: api.appix.v1.DeleteApplicationsReply
	(*GetApplicationsRequest)(nil),    // 8: api.appix.v1.GetApplicationsRequest
	(*GetApplicationsReply)(nil),      // 9: api.appix.v1.GetApplicationsReply
	(*ListApplicationsRequest)(nil),   // 10: api.appix.v1.ListApplicationsRequest
	(*ListApplicationsReply)(nil),     // 11: api.appix.v1.ListApplicationsReply
	(*MatchAppHostgroupsRequest)(nil), // 12: api.appix.v1.MatchAppHostgroupsRequest
	(*MatchAppHostgroupsReply)(nil),   // 13: api.appix.v1.MatchAppHostgroupsReply
}
var file_api_appix_v1_applications_proto_depIdxs = []int32{
	0,  // 0: api.appix.v1.CreateApplicationsRequest.apps:type_name -> api.appix.v1.Application
	0,  // 1: api.appix.v1.UpdateApplicationsRequest.apps:type_name -> api.appix.v1.Application
	0,  // 2: api.appix.v1.GetApplicationsReply.app:type_name -> api.appix.v1.Application
	0,  // 3: api.appix.v1.ListApplicationsReply.apps:type_name -> api.appix.v1.Application
	2,  // 4: api.appix.v1.Applications.CreateApplications:input_type -> api.appix.v1.CreateApplicationsRequest
	4,  // 5: api.appix.v1.Applications.UpdateApplications:input_type -> api.appix.v1.UpdateApplicationsRequest
	6,  // 6: api.appix.v1.Applications.DeleteApplications:input_type -> api.appix.v1.DeleteApplicationsRequest
	8,  // 7: api.appix.v1.Applications.GetApplications:input_type -> api.appix.v1.GetApplicationsRequest
	10, // 8: api.appix.v1.Applications.ListApplications:input_type -> api.appix.v1.ListApplicationsRequest
	12, // 9: api.appix.v1.Applications.MatchAppHostgroups:input_type -> api.appix.v1.MatchAppHostgroupsRequest
	3,  // 10: api.appix.v1.Applications.CreateApplications:output_type -> api.appix.v1.CreateApplicationsReply
	5,  // 11: api.appix.v1.Applications.UpdateApplications:output_type -> api.appix.v1.UpdateApplicationsReply
	7,  // 12: api.appix.v1.Applications.DeleteApplications:output_type -> api.appix.v1.DeleteApplicationsReply
	9,  // 13: api.appix.v1.Applications.GetApplications:output_type -> api.appix.v1.GetApplicationsReply
	11, // 14: api.appix.v1.Applications.ListApplications:output_type -> api.appix.v1.ListApplicationsReply
	13, // 15: api.appix.v1.Applications.MatchAppHostgroups:output_type -> api.appix.v1.MatchAppHostgroupsReply
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_api_appix_v1_applications_proto_init() }
func file_api_appix_v1_applications_proto_init() {
	if File_api_appix_v1_applications_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_appix_v1_applications_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_appix_v1_applications_proto_goTypes,
		DependencyIndexes: file_api_appix_v1_applications_proto_depIdxs,
		MessageInfos:      file_api_appix_v1_applications_proto_msgTypes,
	}.Build()
	File_api_appix_v1_applications_proto = out.File
	file_api_appix_v1_applications_proto_rawDesc = nil
	file_api_appix_v1_applications_proto_goTypes = nil
	file_api_appix_v1_applications_proto_depIdxs = nil
}
