// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: appix/v1/envs.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// gratos::model
type Env struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Env) Reset() {
	*x = Env{}
	mi := &file_appix_v1_envs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Env) ProtoMessage() {}

func (x *Env) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Env.ProtoReflect.Descriptor instead.
func (*Env) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{0}
}

func (x *Env) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Env) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Env) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateEnvsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envs []*Env `protobuf:"bytes,1,rep,name=envs,proto3" json:"envs,omitempty"`
}

func (x *CreateEnvsRequest) Reset() {
	*x = CreateEnvsRequest{}
	mi := &file_appix_v1_envs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEnvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvsRequest) ProtoMessage() {}

func (x *CreateEnvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvsRequest.ProtoReflect.Descriptor instead.
func (*CreateEnvsRequest) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEnvsRequest) GetEnvs() []*Env {
	if x != nil {
		return x.Envs
	}
	return nil
}

type CreateEnvsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CreateEnvsReply) Reset() {
	*x = CreateEnvsReply{}
	mi := &file_appix_v1_envs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEnvsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEnvsReply) ProtoMessage() {}

func (x *CreateEnvsReply) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEnvsReply.ProtoReflect.Descriptor instead.
func (*CreateEnvsReply) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{2}
}

func (x *CreateEnvsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateEnvsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateEnvsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type UpdateEnvsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Envs []*Env `protobuf:"bytes,1,rep,name=envs,proto3" json:"envs,omitempty"`
}

func (x *UpdateEnvsRequest) Reset() {
	*x = UpdateEnvsRequest{}
	mi := &file_appix_v1_envs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEnvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvsRequest) ProtoMessage() {}

func (x *UpdateEnvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvsRequest.ProtoReflect.Descriptor instead.
func (*UpdateEnvsRequest) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateEnvsRequest) GetEnvs() []*Env {
	if x != nil {
		return x.Envs
	}
	return nil
}

type UpdateEnvsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *UpdateEnvsReply) Reset() {
	*x = UpdateEnvsReply{}
	mi := &file_appix_v1_envs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateEnvsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEnvsReply) ProtoMessage() {}

func (x *UpdateEnvsReply) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEnvsReply.ProtoReflect.Descriptor instead.
func (*UpdateEnvsReply) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateEnvsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateEnvsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateEnvsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type DeleteEnvsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteEnvsRequest) Reset() {
	*x = DeleteEnvsRequest{}
	mi := &file_appix_v1_envs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEnvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnvsRequest) ProtoMessage() {}

func (x *DeleteEnvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnvsRequest.ProtoReflect.Descriptor instead.
func (*DeleteEnvsRequest) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteEnvsRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteEnvsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *DeleteEnvsReply) Reset() {
	*x = DeleteEnvsReply{}
	mi := &file_appix_v1_envs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteEnvsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEnvsReply) ProtoMessage() {}

func (x *DeleteEnvsReply) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEnvsReply.ProtoReflect.Descriptor instead.
func (*DeleteEnvsReply) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteEnvsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteEnvsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteEnvsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type GetEnvsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetEnvsRequest) Reset() {
	*x = GetEnvsRequest{}
	mi := &file_appix_v1_envs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvsRequest) ProtoMessage() {}

func (x *GetEnvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvsRequest.ProtoReflect.Descriptor instead.
func (*GetEnvsRequest) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{7}
}

func (x *GetEnvsRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetEnvsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Env     *Env   `protobuf:"bytes,4,opt,name=env,proto3" json:"env,omitempty"`
}

func (x *GetEnvsReply) Reset() {
	*x = GetEnvsReply{}
	mi := &file_appix_v1_envs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEnvsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnvsReply) ProtoMessage() {}

func (x *GetEnvsReply) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnvsReply.ProtoReflect.Descriptor instead.
func (*GetEnvsReply) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{8}
}

func (x *GetEnvsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetEnvsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetEnvsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GetEnvsReply) GetEnv() *Env {
	if x != nil {
		return x.Env
	}
	return nil
}

type ListEnvsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Names    []string `protobuf:"bytes,3,rep,name=names,proto3" json:"names,omitempty"`
	Ids      []uint32 `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ListEnvsRequest) Reset() {
	*x = ListEnvsRequest{}
	mi := &file_appix_v1_envs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEnvsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvsRequest) ProtoMessage() {}

func (x *ListEnvsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvsRequest.ProtoReflect.Descriptor instead.
func (*ListEnvsRequest) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{9}
}

func (x *ListEnvsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListEnvsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListEnvsRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ListEnvsRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListEnvsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Envs    []*Env `protobuf:"bytes,4,rep,name=envs,proto3" json:"envs,omitempty"`
}

func (x *ListEnvsReply) Reset() {
	*x = ListEnvsReply{}
	mi := &file_appix_v1_envs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEnvsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnvsReply) ProtoMessage() {}

func (x *ListEnvsReply) ProtoReflect() protoreflect.Message {
	mi := &file_appix_v1_envs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnvsReply.ProtoReflect.Descriptor instead.
func (*ListEnvsReply) Descriptor() ([]byte, []int) {
	return file_appix_v1_envs_proto_rawDescGZIP(), []int{10}
}

func (x *ListEnvsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListEnvsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListEnvsReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ListEnvsReply) GetEnvs() []*Env {
	if x != nil {
		return x.Envs
	}
	return nil
}

var File_appix_v1_envs_proto protoreflect.FileDescriptor

var file_appix_v1_envs_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x4b, 0x0a, 0x03, 0x45, 0x6e, 0x76, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a,
	0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x6e, 0x76, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x22, 0x57, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x22,
	0x57, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x25, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x57, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76,
	0x52, 0x03, 0x65, 0x6e, 0x76, 0x22, 0x6a, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x7c, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x04, 0x65, 0x6e, 0x76, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x52, 0x04, 0x65, 0x6e, 0x76, 0x73, 0x32,
	0x96, 0x04, 0x0a, 0x04, 0x45, 0x6e, 0x76, 0x73, 0x12, 0x6c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70,
	0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70,
	0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01,
	0x2a, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x73, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x6c, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x76, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22,
	0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x73, 0x2f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x6c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e,
	0x76, 0x73, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x5e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x76, 0x73, 0x12, 0x1c, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x76, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12,
	0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x76, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x64, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x76, 0x73, 0x12, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x76, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x76, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x27, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x70, 0x70, 0x69, 0x78, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x15, 0x61, 0x70, 0x70, 0x69,
	0x78, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x70, 0x69, 0x78, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_appix_v1_envs_proto_rawDescOnce sync.Once
	file_appix_v1_envs_proto_rawDescData = file_appix_v1_envs_proto_rawDesc
)

func file_appix_v1_envs_proto_rawDescGZIP() []byte {
	file_appix_v1_envs_proto_rawDescOnce.Do(func() {
		file_appix_v1_envs_proto_rawDescData = protoimpl.X.CompressGZIP(file_appix_v1_envs_proto_rawDescData)
	})
	return file_appix_v1_envs_proto_rawDescData
}

var file_appix_v1_envs_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_appix_v1_envs_proto_goTypes = []any{
	(*Env)(nil),               // 0: api.appix.v1.Env
	(*CreateEnvsRequest)(nil), // 1: api.appix.v1.CreateEnvsRequest
	(*CreateEnvsReply)(nil),   // 2: api.appix.v1.CreateEnvsReply
	(*UpdateEnvsRequest)(nil), // 3: api.appix.v1.UpdateEnvsRequest
	(*UpdateEnvsReply)(nil),   // 4: api.appix.v1.UpdateEnvsReply
	(*DeleteEnvsRequest)(nil), // 5: api.appix.v1.DeleteEnvsRequest
	(*DeleteEnvsReply)(nil),   // 6: api.appix.v1.DeleteEnvsReply
	(*GetEnvsRequest)(nil),    // 7: api.appix.v1.GetEnvsRequest
	(*GetEnvsReply)(nil),      // 8: api.appix.v1.GetEnvsReply
	(*ListEnvsRequest)(nil),   // 9: api.appix.v1.ListEnvsRequest
	(*ListEnvsReply)(nil),     // 10: api.appix.v1.ListEnvsReply
}
var file_appix_v1_envs_proto_depIdxs = []int32{
	0,  // 0: api.appix.v1.CreateEnvsRequest.envs:type_name -> api.appix.v1.Env
	0,  // 1: api.appix.v1.UpdateEnvsRequest.envs:type_name -> api.appix.v1.Env
	0,  // 2: api.appix.v1.GetEnvsReply.env:type_name -> api.appix.v1.Env
	0,  // 3: api.appix.v1.ListEnvsReply.envs:type_name -> api.appix.v1.Env
	1,  // 4: api.appix.v1.Envs.CreateEnvs:input_type -> api.appix.v1.CreateEnvsRequest
	3,  // 5: api.appix.v1.Envs.UpdateEnvs:input_type -> api.appix.v1.UpdateEnvsRequest
	5,  // 6: api.appix.v1.Envs.DeleteEnvs:input_type -> api.appix.v1.DeleteEnvsRequest
	7,  // 7: api.appix.v1.Envs.GetEnvs:input_type -> api.appix.v1.GetEnvsRequest
	9,  // 8: api.appix.v1.Envs.ListEnvs:input_type -> api.appix.v1.ListEnvsRequest
	2,  // 9: api.appix.v1.Envs.CreateEnvs:output_type -> api.appix.v1.CreateEnvsReply
	4,  // 10: api.appix.v1.Envs.UpdateEnvs:output_type -> api.appix.v1.UpdateEnvsReply
	6,  // 11: api.appix.v1.Envs.DeleteEnvs:output_type -> api.appix.v1.DeleteEnvsReply
	8,  // 12: api.appix.v1.Envs.GetEnvs:output_type -> api.appix.v1.GetEnvsReply
	10, // 13: api.appix.v1.Envs.ListEnvs:output_type -> api.appix.v1.ListEnvsReply
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_appix_v1_envs_proto_init() }
func file_appix_v1_envs_proto_init() {
	if File_appix_v1_envs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_appix_v1_envs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_appix_v1_envs_proto_goTypes,
		DependencyIndexes: file_appix_v1_envs_proto_depIdxs,
		MessageInfos:      file_appix_v1_envs_proto_msgTypes,
	}.Build()
	File_appix_v1_envs_proto = out.File
	file_appix_v1_envs_proto_rawDesc = nil
	file_appix_v1_envs_proto_goTypes = nil
	file_appix_v1_envs_proto_depIdxs = nil
}
