// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: opspillar/v1/features.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// gratos::model
type Feature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Value       string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Feature) Reset() {
	*x = Feature{}
	mi := &file_opspillar_v1_features_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feature) ProtoMessage() {}

func (x *Feature) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feature.ProtoReflect.Descriptor instead.
func (*Feature) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{0}
}

func (x *Feature) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Feature) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Feature) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Feature) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateFeaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Features []*Feature `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *CreateFeaturesRequest) Reset() {
	*x = CreateFeaturesRequest{}
	mi := &file_opspillar_v1_features_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeaturesRequest) ProtoMessage() {}

func (x *CreateFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeaturesRequest.ProtoReflect.Descriptor instead.
func (*CreateFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{1}
}

func (x *CreateFeaturesRequest) GetFeatures() []*Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

type CreateFeaturesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CreateFeaturesReply) Reset() {
	*x = CreateFeaturesReply{}
	mi := &file_opspillar_v1_features_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFeaturesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFeaturesReply) ProtoMessage() {}

func (x *CreateFeaturesReply) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFeaturesReply.ProtoReflect.Descriptor instead.
func (*CreateFeaturesReply) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{2}
}

func (x *CreateFeaturesReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateFeaturesReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateFeaturesReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type UpdateFeaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Features []*Feature `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *UpdateFeaturesRequest) Reset() {
	*x = UpdateFeaturesRequest{}
	mi := &file_opspillar_v1_features_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeaturesRequest) ProtoMessage() {}

func (x *UpdateFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeaturesRequest.ProtoReflect.Descriptor instead.
func (*UpdateFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateFeaturesRequest) GetFeatures() []*Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

type UpdateFeaturesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *UpdateFeaturesReply) Reset() {
	*x = UpdateFeaturesReply{}
	mi := &file_opspillar_v1_features_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFeaturesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFeaturesReply) ProtoMessage() {}

func (x *UpdateFeaturesReply) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFeaturesReply.ProtoReflect.Descriptor instead.
func (*UpdateFeaturesReply) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateFeaturesReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateFeaturesReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateFeaturesReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type DeleteFeaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []uint32 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *DeleteFeaturesRequest) Reset() {
	*x = DeleteFeaturesRequest{}
	mi := &file_opspillar_v1_features_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeaturesRequest) ProtoMessage() {}

func (x *DeleteFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeaturesRequest.ProtoReflect.Descriptor instead.
func (*DeleteFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteFeaturesRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteFeaturesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *DeleteFeaturesReply) Reset() {
	*x = DeleteFeaturesReply{}
	mi := &file_opspillar_v1_features_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFeaturesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFeaturesReply) ProtoMessage() {}

func (x *DeleteFeaturesReply) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFeaturesReply.ProtoReflect.Descriptor instead.
func (*DeleteFeaturesReply) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteFeaturesReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *DeleteFeaturesReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteFeaturesReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type GetFeaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetFeaturesRequest) Reset() {
	*x = GetFeaturesRequest{}
	mi := &file_opspillar_v1_features_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeaturesRequest) ProtoMessage() {}

func (x *GetFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeaturesRequest.ProtoReflect.Descriptor instead.
func (*GetFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{7}
}

func (x *GetFeaturesRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetFeaturesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code    int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action  string   `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Feature *Feature `protobuf:"bytes,4,opt,name=feature,proto3" json:"feature,omitempty"`
}

func (x *GetFeaturesReply) Reset() {
	*x = GetFeaturesReply{}
	mi := &file_opspillar_v1_features_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeaturesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeaturesReply) ProtoMessage() {}

func (x *GetFeaturesReply) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeaturesReply.ProtoReflect.Descriptor instead.
func (*GetFeaturesReply) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{8}
}

func (x *GetFeaturesReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetFeaturesReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetFeaturesReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *GetFeaturesReply) GetFeature() *Feature {
	if x != nil {
		return x.Feature
	}
	return nil
}

type ListFeaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     uint32   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize uint32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Ids      []uint32 `protobuf:"varint,3,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Names    []string `protobuf:"bytes,4,rep,name=names,proto3" json:"names,omitempty"`
	Kvs      []string `protobuf:"bytes,5,rep,name=kvs,proto3" json:"kvs,omitempty"`
}

func (x *ListFeaturesRequest) Reset() {
	*x = ListFeaturesRequest{}
	mi := &file_opspillar_v1_features_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeaturesRequest) ProtoMessage() {}

func (x *ListFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeaturesRequest.ProtoReflect.Descriptor instead.
func (*ListFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{9}
}

func (x *ListFeaturesRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListFeaturesRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListFeaturesRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListFeaturesRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ListFeaturesRequest) GetKvs() []string {
	if x != nil {
		return x.Kvs
	}
	return nil
}

type ListFeaturesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message  string     `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code     int32      `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Action   string     `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	Features []*Feature `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *ListFeaturesReply) Reset() {
	*x = ListFeaturesReply{}
	mi := &file_opspillar_v1_features_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFeaturesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFeaturesReply) ProtoMessage() {}

func (x *ListFeaturesReply) ProtoReflect() protoreflect.Message {
	mi := &file_opspillar_v1_features_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFeaturesReply.ProtoReflect.Descriptor instead.
func (*ListFeaturesReply) Descriptor() ([]byte, []int) {
	return file_opspillar_v1_features_proto_rawDescGZIP(), []int{10}
}

func (x *ListFeaturesReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListFeaturesReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListFeaturesReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ListFeaturesReply) GetFeatures() []*Feature {
	if x != nil {
		return x.Features
	}
	return nil
}

var File_opspillar_v1_features_proto protoreflect.FileDescriptor

var file_opspillar_v1_features_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x65, 0x0a,
	0x07, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a,
	0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x4e, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x22, 0x5b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5b, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x8d, 0x01, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x07, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x80, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x76, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x76, 0x73, 0x22,
	0x90, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x32, 0x95, 0x05, 0x0a, 0x08, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12,
	0x84, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c,
	0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x84, 0x01,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x76, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c,
	0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7c, 0x0a, 0x0c,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c,
	0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a,
	0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x33, 0x0a, 0x10, 0x61, 0x70,
	0x69, 0x2e, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2e, 0x76, 0x31, 0x50, 0x01,
	0x5a, 0x1d, 0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6f, 0x70, 0x73, 0x70, 0x69, 0x6c, 0x6c, 0x61, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_opspillar_v1_features_proto_rawDescOnce sync.Once
	file_opspillar_v1_features_proto_rawDescData = file_opspillar_v1_features_proto_rawDesc
)

func file_opspillar_v1_features_proto_rawDescGZIP() []byte {
	file_opspillar_v1_features_proto_rawDescOnce.Do(func() {
		file_opspillar_v1_features_proto_rawDescData = protoimpl.X.CompressGZIP(file_opspillar_v1_features_proto_rawDescData)
	})
	return file_opspillar_v1_features_proto_rawDescData
}

var file_opspillar_v1_features_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_opspillar_v1_features_proto_goTypes = []any{
	(*Feature)(nil),               // 0: api.opspillar.v1.Feature
	(*CreateFeaturesRequest)(nil), // 1: api.opspillar.v1.CreateFeaturesRequest
	(*CreateFeaturesReply)(nil),   // 2: api.opspillar.v1.CreateFeaturesReply
	(*UpdateFeaturesRequest)(nil), // 3: api.opspillar.v1.UpdateFeaturesRequest
	(*UpdateFeaturesReply)(nil),   // 4: api.opspillar.v1.UpdateFeaturesReply
	(*DeleteFeaturesRequest)(nil), // 5: api.opspillar.v1.DeleteFeaturesRequest
	(*DeleteFeaturesReply)(nil),   // 6: api.opspillar.v1.DeleteFeaturesReply
	(*GetFeaturesRequest)(nil),    // 7: api.opspillar.v1.GetFeaturesRequest
	(*GetFeaturesReply)(nil),      // 8: api.opspillar.v1.GetFeaturesReply
	(*ListFeaturesRequest)(nil),   // 9: api.opspillar.v1.ListFeaturesRequest
	(*ListFeaturesReply)(nil),     // 10: api.opspillar.v1.ListFeaturesReply
}
var file_opspillar_v1_features_proto_depIdxs = []int32{
	0,  // 0: api.opspillar.v1.CreateFeaturesRequest.features:type_name -> api.opspillar.v1.Feature
	0,  // 1: api.opspillar.v1.UpdateFeaturesRequest.features:type_name -> api.opspillar.v1.Feature
	0,  // 2: api.opspillar.v1.GetFeaturesReply.feature:type_name -> api.opspillar.v1.Feature
	0,  // 3: api.opspillar.v1.ListFeaturesReply.features:type_name -> api.opspillar.v1.Feature
	1,  // 4: api.opspillar.v1.Features.CreateFeatures:input_type -> api.opspillar.v1.CreateFeaturesRequest
	3,  // 5: api.opspillar.v1.Features.UpdateFeatures:input_type -> api.opspillar.v1.UpdateFeaturesRequest
	5,  // 6: api.opspillar.v1.Features.DeleteFeatures:input_type -> api.opspillar.v1.DeleteFeaturesRequest
	7,  // 7: api.opspillar.v1.Features.GetFeatures:input_type -> api.opspillar.v1.GetFeaturesRequest
	9,  // 8: api.opspillar.v1.Features.ListFeatures:input_type -> api.opspillar.v1.ListFeaturesRequest
	2,  // 9: api.opspillar.v1.Features.CreateFeatures:output_type -> api.opspillar.v1.CreateFeaturesReply
	4,  // 10: api.opspillar.v1.Features.UpdateFeatures:output_type -> api.opspillar.v1.UpdateFeaturesReply
	6,  // 11: api.opspillar.v1.Features.DeleteFeatures:output_type -> api.opspillar.v1.DeleteFeaturesReply
	8,  // 12: api.opspillar.v1.Features.GetFeatures:output_type -> api.opspillar.v1.GetFeaturesReply
	10, // 13: api.opspillar.v1.Features.ListFeatures:output_type -> api.opspillar.v1.ListFeaturesReply
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_opspillar_v1_features_proto_init() }
func file_opspillar_v1_features_proto_init() {
	if File_opspillar_v1_features_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_opspillar_v1_features_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_opspillar_v1_features_proto_goTypes,
		DependencyIndexes: file_opspillar_v1_features_proto_depIdxs,
		MessageInfos:      file_opspillar_v1_features_proto_msgTypes,
	}.Build()
	File_opspillar_v1_features_proto = out.File
	file_opspillar_v1_features_proto_rawDesc = nil
	file_opspillar_v1_features_proto_goTypes = nil
	file_opspillar_v1_features_proto_depIdxs = nil
}
