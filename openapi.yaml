# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: Admin API
    version: 0.0.1
paths:
    /api/v1/users/create:
        post:
            tags:
                - Admin
            operationId: Admin_CreateUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUsersReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/users/delete:
        post:
            tags:
                - Admin
            operationId: Admin_DeleteUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DeleteUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUsersReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/users/list:
        post:
            tags:
                - Admin
            operationId: Admin_ListUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ListUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/users/login:
        post:
            tags:
                - Admin
            operationId: Admin_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/users/logout:
        post:
            tags:
                - Admin
            operationId: Admin_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutReq'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/users/update:
        post:
            tags:
                - Admin
            operationId: Admin_UpdateUsers
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUsersRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUsersReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /api/v1/users/{id}:
        get:
            tags:
                - Admin
            operationId: Admin_GetUsers
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUsersReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateUsersReply:
            type: object
            properties:
                message:
                    type: string
                code:
                    type: integer
                    format: int32
                action:
                    type: string
        CreateUsersRequest:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
        DeleteUsersReply:
            type: object
            properties:
                message:
                    type: string
                code:
                    type: integer
                    format: int32
                action:
                    type: string
        DeleteUsersRequest:
            type: object
            properties:
                ids:
                    type: array
                    items:
                        type: integer
                        format: uint32
        GetUsersReply:
            type: object
            properties:
                message:
                    type: string
                code:
                    type: integer
                    format: int32
                action:
                    type: string
                user:
                    $ref: '#/components/schemas/User'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListUsersReply:
            type: object
            properties:
                message:
                    type: string
                code:
                    type: integer
                    format: int32
                action:
                    type: string
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
        ListUsersRequest:
            type: object
            properties:
                page:
                    type: integer
                    format: uint32
                pageSize:
                    type: integer
                    format: uint32
                userNames:
                    type: array
                    items:
                        type: string
                emails:
                    type: array
                    items:
                        type: string
                phones:
                    type: array
                    items:
                        type: string
                ids:
                    type: array
                    items:
                        type: integer
                        format: uint32
        LoginReply:
            type: object
            properties:
                message:
                    type: string
                code:
                    type: integer
                    format: int32
                action:
                    type: string
                user:
                    $ref: '#/components/schemas/User'
        LoginReq:
            type: object
            properties:
                userName:
                    type: string
                password:
                    type: string
        LogoutReply:
            type: object
            properties:
                message:
                    type: string
                code:
                    type: integer
                    format: int32
                action:
                    type: string
        LogoutReq:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateUsersReply:
            type: object
            properties:
                message:
                    type: string
                code:
                    type: integer
                    format: int32
                action:
                    type: string
        UpdateUsersRequest:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                userName:
                    type: string
                password:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                token:
                    type: string
            description: gratos::model
tags:
    - name: Admin
